apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

// JAVA Version 1.7
sourceCompatibility = 1.7
// 개발한 애플리케이션 버전
version = '1.0'

// 의존성 설정에 사용할 프로퍼티
springVersion = '3.1.1.RELEASE'
logBackVersion = '1.0.6'
mySQLVersion = '5.1.26'

loadConfiguration()

def loadConfiguration() {
    def environment = hasProperty('spring.profiles.active') ? get('spring.profiles.active') : 'inetdev'
    setProperty 'environment', environment
    println "####### Environment is set to [$environment] #######"   
    def configFile = file('environment.groovy')
    def config = new ConfigSlurper(environment).parse(configFile.toURL())    
    setProperty 'config', config
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories { 
        mavenCentral()        
}

// 의존성 설정
dependencies {
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "org.springframework:spring-jdbc:$springVersion"
	compile "org.springframework:spring-aop:$springVersion"
	compile "org.springframework.security:spring-security-core:$springVersion"
	compile "org.springframework.security:spring-security-web:$springVersion"
	compile "org.springframework.security:spring-security-config:$springVersion"
	compile "cglib:cglib-nodep:2.2.2"
	compile "commons-collections:commons-collections:3.2"
	compile "commons-lang:commons-lang:2.6"
	compile "javax.mail:mail:1.4.7"
	compile "mysql:mysql-connector-java:5.1.26"
	compile "org.aspectj:aspectjtools:1.6.6"
	compile "redis.clients:jedis:2.1.0"
	compile "jstl:jstl:1.2"
	compile "org.codehaus.jackson:jackson-mapper-asl:1.9.12",
	"com.fasterxml.jackson.core:jackson-core:2.2.2"
	compile "ch.qos.logback:logback-classic:1.0.6",
			"org.codehaus.janino:janino:2.6.1",
			"org.codehaus.janino:commons-compiler:2.6.1"
	  
    providedCompile  'javax.servlet:javax.servlet-api:3.0.1'

    testCompile "org.springframework:spring-test:$springVersion",
                'junit:junit:4.+',
                'org.mockito:mockito-core:1.9.0',
				'org.hamcrest:hamcrest-all:1.3'
}

// logback(slf4j)를 사용하기 때문에 모든 의존성에서 commons-logging는 제외
//[configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')

// JAVA 컴파일시 인코딩 설정
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
